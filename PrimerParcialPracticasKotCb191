fun main(args: Array<String>) {
  

  //variablesYConstantes()
  //tiposDeDatos()
  //sentenciaIf()
  //sentenciaWhen()
  //arrays()
  maps()
}

private fun variablesYConstantes() {
  
  // Variables

  var myFirstVariable = "Hello Hackermen!"
  var myFirstNumber = 1
   
   println(myFirstVariable)

   println(myFirstNumber)
  
  myFirstVariable = "se cambio"
  println(myFirstVariable)
  
   // No podemos asignar un tipo Int a una variable de tipo String
  //myFirstVariable = 1

    var mySecondVariable = "Suscr√≠bete!"

    println(mySecondVariable)

    mySecondVariable = myFirstVariable

    println(mySecondVariable)

    // Constantes

    val myFirstConstant = "¬øTe ha gustado el tutorial?"

    println(myFirstConstant)

        // Una constante no puede modificar su valor
        //myFirstConstant = "Si te ha gustado, dale a LIKE"

        //val mySecondConstant = myFirstVariable

        //println(mySecondConstant)
}   

 private fun tiposDeDatos() {

        // String

        val myString: String = "Hola Hackermen!"
        val myString2 = "Bienvenidos a MoureDev"
        val myString3 = myString + " " + myString2
        println(myString3)

    // Enteros (Byte, Short, Int, Long)

        val myInt: Int = 1
        val myInt2 = 2
        val myInt3 = myInt + myInt2
        println(myInt3)

  // Decimales (Float, Double)

        val myFloat: Float = 1.5f
        val myDouble = 1.5
        val myDouble2 = 2.6
        val myDouble3 = 1 // En realidad este es Int
        val myDouble4 = myDouble + myDouble2 + myDouble3 + myFloat
        println(myDouble4)

        // Boolean (Bool)
        val myBool: Boolean = true
        val myBool2 = false
        //val myBool3 = myBool + myBool2
        println(myBool == myBool2)
        println(myBool && myBool2)
        println(myBool || myBool2)
 }
  /*
    Aqu√≠ vamos a hablar de la sentencia if
     */
    fun sentenciaIf() {

        val myNumber = 5

        // Operadores condicionales
        // > mayor que
        // < menor que
        // >= (> =) mayor o igual que
        // <= (< =) menor o igual que
        // == (= =) igualdad
        // != (! =) desigualdad

        // Operadores l√≥gicos
        // && operador "y"
        // || operador "o"
        // ! operador "no"

       //primer ejemplo de if 
        
       if (myNumber <= 10) {
            // Sentencia if
            println("$myNumber es menor o igual que 10")

        } else {

            // Sentencia else if
            println("$myNumber es mayor a 10")

        }
       
       

        // usando el operador &&
        /*
        if (myNumber < 10 && myNumber > 5) {
            // Sentencia if
            println("$myNumber es menor o igual a 10 y mayor que 5 ")

        } else {

            // Sentencia else if
            println("$myNumber es mayor que 10 o menor 'igual que 5")

        }
        */
         // usando el operador ||
         /* 
         if (myNumber < 10 && myNumber > 5) || myNumber == 34{
            // Sentencia if
            println("$myNumber es menor o igual a 10 y mayor que 5 o es igual a 34 ")

        } else {

            // Sentencia else if
            println("$myNumber es mayor que 10 o menor 'igual que 5 y no es igual a 34")

        } 
        */
      
      //Ejamplo de else if{}
      /*
      if ((myNumber <= 10 && myNumber > 5) || myNumber == 53) {
            // Sentencia if
            println("$myNumber es menor o igual que 10 y mayor que 5 o es igual a 53")
          // Sentencia else if   
        } else if(myNumber == 60) {

            
            println("$myNumber es igual a 60")

        }  else {
            // Sentencia else
            println("$myNumber es mayor que 10 o menor o igual que 5 y no es igual a 53")
        }     
        */
        //ejemplo con negacion ! 
        /*
        if ((myNumber <= 10 && myNumber > 5) || myNumber == 53) {
            // Sentencia if
            println("$myNumber es menor o igual que 10 y mayor que 5 o es igual a 53")

        } else if(myNumber == 60) {

            // Sentencia else if
            println("$myNumber es igual a 60")
          //operador ! no indica que no es igual a 70  
        } else if(myNumber != 70) {

            // Sentencia else if
            println("$myNumber no es igual a 70")

        } else {
            // Sentencia else
            println("$myNumber es mayor que 10 o menor o igual que 5 y no es igual a 53")
        }
        */

       /*
        if (!(myNumber <= 10 && myNumber > 5) || myNumber == 53) {
            // Sentencia if
            println("$myNumber es menor o igual que 10 y mayor que 5 o es igual a 53")

        } else if(myNumber == 60) {

            // Sentencia else if
            println("$myNumber es igual a 60")

        } else if(myNumber != 70) {

            // Sentencia else if
            println("$myNumber no es igual a 70")

        } else {
            // Sentencia else
            println("$myNumber es mayor que 10 o menor o igual que 5 y no es igual a 53")
        }
       */
}

/*
    Aqu√≠ vamos a hablar de la sentencia when
     */
    fun sentenciaWhen() {

    // When con String
    //println("Ingresa el nombre de un pais")
    //val country = readLine()
     

        val country = "Italia"

        when (country) {
            "Espa√±a", "Mexico", "Per√∫", "Colombia", "Argentina" -> {
                println("El idioma es Espa√±ol")
            } "EEUU" -> {
                println("El idioma es Ingl√©s")
            } "Francia" -> {
                println("El idioma es Franc√©s")
            } else -> {
                println("No conocemos el idioma")
            }
        }

        // When con Int
       // println("Ingresa una edad")
       // val age = readLine()!!.toInt()

        val age = 100

        when (age) {
            0, 1, 2 -> {
                println("Eres un beb√©")
            } in 3..10 -> {
                println("Eres un ni√±o")
            } in 11..17 -> {
                println("Eres un adolescente")
            } in 18..69 -> {
                println("Eres adulto")
            } in 70..99 -> {
                println("Eres anciano")
            } else -> {
                println("üò±")
            }
        }

    }

 /*
    Aqu√≠ vamos a hablar de arrays o arreglos
     */
    fun arrays() {

        val name = "Brais"
        val surname = "Moure"
        val company = "MoureDev"
        val age = "32"

        // Creaci√≥n de un Array

        val myArray = arrayListOf<String>()

        // A√±adir datos de uno en uno

        myArray.add(name)
        myArray.add(surname)
        myArray.add(company)
        myArray.add(age)
        //myArray.add(age)
        //myArray.add(age)

        println(myArray)

        // A√±adir un conjunto de datos
        /*  
        myArray.addAll(listOf("Hola", "Bienvenidos 6C"))

        println(myArray)
         */
        // Acceso a datos
        /*
        val myCompany = myArray[2]

        println(myCompany)
         */
        // Modificaci√≥n de datos
        /*
        myArray[5] = "elemento modificado"

        println(myArray)
        */
        // Eliminar datos
       /*
        myArray.removeAt(4)

        println(myArray)
       */
        // Recorrer datos
       /* 
        myArray.forEach {
            println(it)
        }
        */
        // Otras operaciones
       
       // println(myArray.count())

       // myArray.clear()

       // println(myArray.count())

        // myArray.first()
        // myArray.last()
        // myArray.sort()
    }

/*
    Aqu√≠ vamos a hablar de mapas, tambi√©n llamados diccionarios
     */
    fun maps() {

        // Sintaxis
        val myMap: Map<String,Int> = mapOf()
        println(myMap)

        // A√±adir elementos
        myMap = mapOf("Brais" to 1, "Pedro" to 2, "Sara" to 5) // mapa no mutable crea un mapa de cero que no se puede cambiar
        //myMap = mutableMapOf("Brais" to 1, "Pedro" to 2, "Sara" to 5) // este mapa se le pueden agragar indices
        //println(myMap)

        // A√±adir un solo valor
        //myMap["Ana"] = 7
        //myMap.put("Mar√≠a",8)
        //println(myMap)

        // Actualizaci√≥n de un dato
        //myMap.put("Brais",3)
        //myMap["Brais"] = 4
        //println(myMap)

        //myMap.put("Marcos",3)
        //println(myMap)

        // Acceso a un dato
        //println(myMap["Brais"])

        // Eliminar un dato
        //myMap.remove("Brais")
        //println(myMap)
    }
